1.	Сетевые протоколы. Стек TCP/IP. Протоколы IP, UDP и TCP.
набор правил для соед и обмена данными
сети открытая система
osi - open system interconnection
опред набор уровней взаимодействия
организует сетевые протоколы
протоколы работают в стеке

физический-канальный-сетевой-транспортный-(порты)-сеансовый-уровень представления
ф-аппаратура(на уровне сигналов)
к-логическое (PPP IEEE 802.2)
c-поиск адресов и перенаправление (ipv4/6)
т-трансопртный передача от адреса к адресу с возмодным контролем и доп сервисов(tcp/udp)
сеансовый - установление сеансов между процессами/системами и управлением RPC
уровень представления - преобразования данных (ascii jpg)
прикладной - конечные приложения как польз так и служ (HTTP/FTP/SMTP/POP3)

1-4 транспортая система, выше порты
TCP/IP - напор сетевых протоколов передачи данных
[Канальный(ethernet iee 802.11)-Сетевой(ip)-Траспортный(TCP.UPD)-Прикладной(http ftp dns)]
min 2 участника
айди участника
	адрес узла
	проги на узле

сетевой использует логические адреса
канальный использует физические mac адреса
физ->лог разрешение адресов
сетевые имена -> логические адреса(NAT,DNS)

айди проги - номер порта
полный айди 3 участика адрес:протокол:порт

IP - часть стека TCP/IP
	адресация узлов
	передача данных между адресованными узлами

Интернет построен на IP
протокол в 81 году

передается пакетами
заголовок + айпи участников + данные
макс 65535байт

udp - user datagram protocol
tcp - transmission control protocol

оба про доставку сообщений
udp -
	проще быстрее
	широковещательно
	короткий заголовок
	не гарантирует доставки
	короткая длина 65528байт
tcp -
	надежная доставка
	ориентирован на соединение(установление соединения)
	нет широковещания
	разбивает данные на оптимальную дину
	использует таймер для ожидания(квитанция)
	проверка контрольной суммы

smtp - tcp
telnet - tcp
http - tcp
ftp - tcp
dns - udp
rip - udp
sip - udp

dns
	63 символа
	non case-sensitive
	tree-like
	сервера имен

URI - Unifor Resource Identifier
URL - Uniform Resource Locator = URI + инфа о местонахождении ресурса
URN - Uniform Resource Name = URI - инфы о местонахождении
URI = схема + ':'
	схема = // + имя хоста(символное имя компа) + :порт + путь на хосте к ресурсу + ? праметры запроса + #фрагмент

HTTP - протокол передачи гипертекста() изначально html теперь произвольных данных
	поверх TCP :80
	клиент-сервер
	текстовыми сообщениями

HTTP REQUEST
	стартовая строка(обяз) (METHOD, URI, HTTP/VER)
		METHOD
			GET запрос ресурса
			POST переачи данных для обработки в теле
			PUT сохранить перезаписать русурс с указанным URI
			DELETE удаление ресурса
			HEAD аналогично Get - но будет ток заголовок
			OPTIONS запрос х-к соединения
	заголовки
		для настройки парам-ов передачи описание тела сообщ
		имязаголовка:значение (user-agent: mozilla/5.0)

	тело

HTTP RESPONSE
	стартовая строка(обяз) (HTTP/VER, STATUSCODE, ANNOTATION)
		statuscode 1xx - инф 2xx успешное 3xx переназначение 4xx ошибка польз 5xx ошибка сервака
	заголовки
	тело

тим бернерс-ли

глобальные атрибуты - могут применяться к любым html элементам
	hidden
	id
	class одно или несколько
	style
	title
	accesskey - быстродоступ клавишу
	tabindex - позицию табуляции(для фокуса)
	dir - направление отоброж
	lang - язык
	hidden
	contenteditable(Html5)
	spellcheck(html5)
	translate(html5)
	data-*
	drag/drop
	microdata
	+ eventDispatchers

структура
	doctype
	html
		head
			metadata
				manifest
				lang
				title
				res
				base
		body
			displaydata

main - основной контент
section семантическая секция

css - cascading style sheets
* - универсальный селектр
элементов
.классов
#идентификаторов
[attr]
:псевдоклассы(hover)
::псевдоэлементы
> - прямых детей
+ все s2 сразупосле s1
~ все после s1

default
user
author

вендорные префиксы

JavaScript – прототипно-ориентированный сценарный язык программирования.

num
string
boolean
obj
nukk
undefined





