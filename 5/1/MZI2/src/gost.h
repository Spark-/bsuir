//
// Created by Alexander Degtyarev on 5/17/17.
//

#ifndef IPR1_GOST_H
#define IPR1_GOST_H
#include <cstdint>
#include "utility.h"

const int gost28147_key_indexes[32] = {
        1,2,3,4,5,6,7,8,
        1,2,3,4,5,6,7,8,
        1,2,3,4,5,6,7,8,
        8,7,6,5,4,3,2,1
};

const int gost28147_sbox[128] = {
        0x4,0xA,0x9,0x2,0xD,0x8,0x0,0xE,0x6,0xB,0x1,0xC,0x7,0xF,0x5,0x3,
        0xE,0xB,0x4,0xC,0x6,0xD,0xF,0xA,0x2,0x3,0x8,0x1,0x0,0x7,0x5,0x9,
        0x5,0x8,0x1,0xD,0xA,0x3,0x4,0x2,0xE,0xF,0xC,0x7,0x6,0x0,0x9,0xB,
        0x7,0xD,0xA,0x1,0x0,0x8,0x9,0xF,0xE,0x4,0x6,0xC,0xB,0x2,0x5,0x3,
        0x6,0xC,0x7,0x1,0x5,0xF,0xD,0x8,0x4,0xA,0x9,0xE,0x0,0x3,0xB,0x2,
        0x4,0xB,0xA,0x0,0x7,0x2,0x1,0xD,0x3,0x6,0x8,0x5,0x9,0xC,0xF,0xE,
        0xD,0xB,0x4,0x1,0x3,0xF,0x5,0x9,0x0,0xA,0xE,0x7,0x6,0x8,0x2,0xC,
        0x1,0xF,0xD,0x0,0x5,0x7,0xA,0x4,0x9,0x2,0x3,0xE,0x6,0xB,0x8,0xC
};

void gost28147_process_block(uint64_t *block, uint32_t *keys,bool encrypt);
void gost28147_encrypt_feistel(uint32_t * left, uint32_t * right, int rounds, uint32_t * key);
void gost28147_decrypt_feistel(uint32_t * left, uint32_t * right, int rounds, uint32_t * key);
#endif //IPR1_GOST_H
